# Tokamak DKG Server - Environment Configuration
# Copy this file to .env and customize for your environment

# ===== SERVER CONFIGURATION =====
# Server bind address (use 0.0.0.0 for production, 127.0.0.1 for local)
DKG_SERVER_BIND=0.0.0.0:9000

# Log level: error, warn, info, debug, trace
DKG_SERVER_LOG_LEVEL=info

# Development mode (enables additional debug features)
DKG_SERVER_DEV_MODE=false

# ===== SECURITY CONFIGURATION =====
# Maximum concurrent WebSocket connections
DKG_MAX_CONNECTIONS=100

# Session timeout in seconds (default: 1 hour)
DKG_SESSION_TIMEOUT=3600

# Enable TLS for WebSocket connections (wss://)
DKG_ENABLE_TLS=false

# TLS certificate and key paths (only needed if TLS is enabled)
DKG_TLS_CERT_PATH=/etc/ssl/certs/server.crt
DKG_TLS_KEY_PATH=/etc/ssl/private/server.key

# Rate limiting
DKG_RATE_LIMIT_CONNECTIONS=10  # connections per minute per IP
DKG_RATE_LIMIT_MESSAGES=100    # messages per minute per connection

# ===== MONITORING CONFIGURATION =====
# Prometheus metrics endpoint port
DKG_METRICS_PORT=9001

# Health check endpoint port  
DKG_HEALTH_CHECK_PORT=9002

# Enable Prometheus metrics
DKG_ENABLE_METRICS=true

# ===== OPERATIONAL CONFIGURATION =====
# Data directory for temporary session data
DKG_DATA_DIR=./data

# Log directory
DKG_LOG_DIR=./logs

# Log format: json (production) or pretty (development)
DKG_LOG_FORMAT=json

# ===== AUTHENTICATION CONFIGURATION =====
# Challenge timeout in seconds (how long challenges are valid)
DKG_CHALLENGE_TIMEOUT=300

# Admin API token (for shutdown endpoint)
DKG_ADMIN_TOKEN=change-me-in-production

# JWT secret for session tokens (if using stateless auth)
DKG_JWT_SECRET=change-me-in-production-use-256-bit-key

# ===== DATABASE CONFIGURATION (Optional - for persistent sessions) =====
# Database URL (uncomment to enable persistent session storage)
# DKG_DATABASE_URL=postgresql://user:password@localhost:5432/dkg_server

# Redis URL (uncomment to enable Redis-based session storage)  
# DKG_REDIS_URL=redis://localhost:6379/0

# ===== NETWORKING CONFIGURATION =====
# Allowed origins for CORS (comma-separated)
DKG_ALLOWED_ORIGINS=*

# Trust proxy headers (enable if behind reverse proxy)
DKG_TRUST_PROXY=false

# ===== PERFORMANCE TUNING =====
# WebSocket ping interval in seconds
DKG_PING_INTERVAL=30

# WebSocket timeout in seconds
DKG_WEBSOCKET_TIMEOUT=60

# Maximum message size in bytes
DKG_MAX_MESSAGE_SIZE=1048576  # 1MB

# Worker thread pool size (0 = number of CPU cores)
DKG_WORKER_THREADS=0

# ===== DEVELOPMENT CONFIGURATION =====
# Enable development endpoints (should be false in production)
DKG_ENABLE_DEV_ENDPOINTS=false

# Allow insecure connections (should be false in production)
DKG_ALLOW_INSECURE=false

# Mock authentication (should be false in production)
DKG_MOCK_AUTH=false

# ===== BACKUP AND RECOVERY =====
# Backup directory for session exports
DKG_BACKUP_DIR=./backups

# Automatic backup interval in seconds (0 = disabled)
DKG_AUTO_BACKUP_INTERVAL=0

# ===== INTEGRATION CONFIGURATION =====
# External notification webhook URL
# DKG_WEBHOOK_URL=https://your-webhook-endpoint.com/dkg-events

# Webhook authentication token
# DKG_WEBHOOK_TOKEN=your-webhook-secret

# ===== EXAMPLE PRODUCTION VALUES =====
# For production deployment, use values like:
#
# DKG_SERVER_BIND=0.0.0.0:9000
# DKG_SERVER_LOG_LEVEL=info
# DKG_SERVER_DEV_MODE=false
# DKG_ENABLE_TLS=true
# DKG_MAX_CONNECTIONS=1000
# DKG_SESSION_TIMEOUT=7200
# DKG_LOG_FORMAT=json
# DKG_ADMIN_TOKEN=$(openssl rand -hex 32)
# DKG_JWT_SECRET=$(openssl rand -hex 32)